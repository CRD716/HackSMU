[{"C:\\Users\\ashwin\\Documents\\GitHub\\HackSMU\\frontend\\src\\index.js":"1","C:\\Users\\ashwin\\Documents\\GitHub\\HackSMU\\frontend\\src\\App.js":"2","C:\\Users\\ashwin\\Documents\\GitHub\\HackSMU\\frontend\\src\\AuthContext.js":"3","C:\\Users\\ashwin\\Documents\\GitHub\\HackSMU\\frontend\\src\\reportWebVitals.js":"4","C:\\Users\\ashwin\\Documents\\GitHub\\HackSMU\\frontend\\src\\Navbar.js":"5","C:\\Users\\ashwin\\Documents\\GitHub\\HackSMU\\frontend\\src\\Home.js":"6","C:\\Users\\ashwin\\Documents\\GitHub\\HackSMU\\frontend\\src\\Room.js":"7","C:\\Users\\ashwin\\Documents\\GitHub\\HackSMU\\frontend\\src\\About.js":"8","C:\\Users\\ashwin\\Documents\\GitHub\\HackSMU\\frontend\\src\\Login.js":"9","C:\\Users\\ashwin\\Documents\\GitHub\\HackSMU\\frontend\\src\\Modal.js":"10","C:\\Users\\ashwin\\Documents\\GitHub\\HackSMU\\frontend\\src\\AboutModule.js":"11","C:\\Users\\ashwin\\Documents\\GitHub\\HackSMU\\frontend\\src\\components\\NoteModal.js":"12","C:\\Users\\ashwin\\Documents\\GitHub\\HackSMU\\frontend\\src\\components\\NoteBanner.js":"13"},{"size":671,"mtime":1695174400581,"results":"14","hashOfConfig":"15"},{"size":1320,"mtime":1695174400563,"results":"16","hashOfConfig":"15"},{"size":784,"mtime":1695174400564,"results":"17","hashOfConfig":"15"},{"size":375,"mtime":1695174400583,"results":"18","hashOfConfig":"15"},{"size":379,"mtime":1695174400571,"results":"19","hashOfConfig":"15"},{"size":262,"mtime":1695174400567,"results":"20","hashOfConfig":"15"},{"size":5446,"mtime":1695181237984,"results":"21","hashOfConfig":"15"},{"size":2916,"mtime":1695174400559,"results":"22","hashOfConfig":"15"},{"size":2309,"mtime":1695174400568,"results":"23","hashOfConfig":"15"},{"size":6297,"mtime":1695180981162,"results":"24","hashOfConfig":"15"},{"size":479,"mtime":1695174400561,"results":"25","hashOfConfig":"15"},{"size":4487,"mtime":1695181060775,"results":"26","hashOfConfig":"15"},{"size":739,"mtime":1695174400578,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},"1dgr8hp",{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"31"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"31"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"31"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},"C:\\Users\\ashwin\\Documents\\GitHub\\HackSMU\\frontend\\src\\index.js",[],[],[],"C:\\Users\\ashwin\\Documents\\GitHub\\HackSMU\\frontend\\src\\App.js",["72","73"],[],"// App.js\r\nimport React, { useState } from 'react';\r\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\r\nimport './App.css';\r\nimport Navbar from './Navbar';\r\nimport Home from './Home';\r\nimport About from './About';\r\nimport { useAuth } from './AuthContext';\r\nimport Login from './Login';\r\nimport Room from './Room';\r\nimport Modal from './Modal'\r\n\r\nfunction App() {\r\n  const { authenticated } = useAuth();\r\n  const [rooms, setRooms] = useState([]);\r\n  const [isOpen, setIsOpen] = useState(false)\r\n  const updateRooms = (newRooms) => {\r\n    setRooms(newRooms);\r\n  };\r\n  console.log(rooms);\r\n\r\n  return (\r\n    <Router>\r\n        <div className=\"App\">\r\n          <Navbar />\r\n          <Routes>\r\n            {/* {!authenticated ? ( */}\r\n            \r\n            {/* ) : ( */}\r\n              <>\r\n                <Route path=\"/\" element={<Login updateRooms={updateRooms} rooms={rooms}/>} />\r\n                {/* <Route path=\"/\" exact element={<Home />} /> */}\r\n                <Route path=\"/about\" element={<About />} />\r\n                {rooms.map((item) => (<Route path={\"/\" + item} element={<Room />} /> ))}\r\n              </>\r\n            {/* )} */}\r\n          </Routes>\r\n          <Modal open={isOpen} onClose={() => setIsOpen(false)}/>\r\n        </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;","C:\\Users\\ashwin\\Documents\\GitHub\\HackSMU\\frontend\\src\\AuthContext.js",[],[],"C:\\Users\\ashwin\\Documents\\GitHub\\HackSMU\\frontend\\src\\reportWebVitals.js",[],[],"C:\\Users\\ashwin\\Documents\\GitHub\\HackSMU\\frontend\\src\\Navbar.js",[],[],"C:\\Users\\ashwin\\Documents\\GitHub\\HackSMU\\frontend\\src\\Home.js",[],[],"C:\\Users\\ashwin\\Documents\\GitHub\\HackSMU\\frontend\\src\\Room.js",["74"],[],"import React, { useState } from 'react';\r\nimport './Room.css';\r\nimport NoteModal from './components/NoteModal';\r\nimport NoteBanner from './components/NoteBanner';\r\nimport { postData, getNotesData } from '../ApiAccess'; // Adjust the path\r\n\r\nfunction Room() {\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [notes, setNotes] = useState([]); // Array to store note objects\r\n  const [name, setName] = useState('');\r\n  const [text, setText] = useState('');\r\n  const [wordCount, setWordCount] = useState(0);\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n\r\n  const handleTextClick = () => {\r\n    const textToCopy = window.location.href.split('3000/')[1]; // Replace with the actual text you want to copy\r\n    const textArea = document.createElement('textarea');\r\n    textArea.value = textToCopy;\r\n    document.body.appendChild(textArea);\r\n    textArea.select();\r\n    document.execCommand('copy');\r\n    document.body.removeChild(textArea);\r\n  };\r\n\r\n  const handleNameChange = (e) => {\r\n    const inputName = e.target.value;\r\n    setName(inputName);\r\n  };\r\n\r\n  const handleTextChange = (e) => {\r\n    const inputText = e.target.value;\r\n    setText(inputText);\r\n    const words = inputText.split(/\\s+/).filter((word) => word !== '');\r\n    setWordCount(words.length);\r\n  };\r\n\r\n  const handleFileUpload = (e) => {\r\n    const files = e.target.files;\r\n    if (files && files.length > 0) {\r\n      const file = files[0];\r\n      if (file.type === 'text/plain') {\r\n        const reader = new FileReader();\r\n        reader.onload = (event) => {\r\n          const fileText = event.target.result;\r\n          setText(fileText);\r\n          const words = fileText.split(/\\s+/).filter((word) => word !== '');\r\n          setWordCount(words.length);\r\n          setErrorMessage('');\r\n        };\r\n        reader.readAsText(file);\r\n      } else {\r\n        setErrorMessage('Please upload a .txt file.');\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleGenerateClick = () => {\r\n    // Implement the logic to generate something here\r\n    // You can use this function to generate content or perform any other action you need.\r\n    console.log('Generate button clicked');\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!name || !text) {\r\n      // Check if either name or text is empty\r\n      setErrorMessage('Please fill in both name and text fields.');\r\n    } else if (wordCount > 750) {\r\n      // Check if word count exceeds the limit\r\n      setErrorMessage('Word count exceeds the limit (750 words).');\r\n    } else {\r\n      // Create a new note object\r\n      const newNote = {\r\n        name: name,\r\n        text: text,\r\n        wordCount: wordCount,\r\n      };\r\n\r\n      // Add the new note to the notes array\r\n      console.log('Added new note object: ' + newNote);\r\n      setNotes([...notes, newNote]);\r\n      postData(window.location.href.split('3000/')[1], text);\r\n\r\n      // Clear the input fields and word count\r\n      setName('');\r\n      setText('');\r\n      setWordCount(0);\r\n      setErrorMessage('');\r\n\r\n      // Close the modal\r\n      setIsModalOpen(false);\r\n    }\r\n  };\r\n\r\n  const openModal = () => {\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  const addNote = (newNote) => {\r\n    setNotes([...notes, newNote]);\r\n  };  \r\n  \r\n  return (\r\n    <div className=\"Room\">\r\n      <h1>FuzeNote</h1>\r\n      <h2>Room Code</h2>\r\n      <p>\r\n        <span className=\"copy-text\" onClick={handleTextClick}>\r\n          {window.location.href.split('3000/')[1]}{' '}\r\n          <span className=\"tooltip\">Click to Copy</span>\r\n        </span>\r\n      </p>\r\n      <p>Total Posts: {notes.length}</p>\r\n      <p>\r\n        <span className=\"total-words\">\r\n          {notes.reduce((total, note) => total + note.wordCount, 0)}/3000 total words permitted\r\n        </span>\r\n      </p>\r\n      <hr />\r\n      {isModalOpen && (\r\n        <NoteModal\r\n          isOpen={isModalOpen}\r\n          closeModal={closeModal}\r\n          handleSubmit={handleSubmit}\r\n          handleNameChange={handleNameChange}\r\n          handleTextChange={handleTextChange}\r\n          handleFileUpload={handleFileUpload}\r\n          errorMessage={errorMessage}\r\n          name={name}\r\n          text={text}\r\n          wordCount={wordCount}\r\n          addNote={addNote} // Pass the addNote function as a prop\r\n        />\r\n      )}\r\n      {notes.map((note, index) => (\r\n        <NoteBanner\r\n          key={index}\r\n          note={note}\r\n          onDelete={(noteToDelete) => {\r\n            // Remove the note from the notes array\r\n            const updatedNotes = notes.filter((note) => note !== noteToDelete);\r\n            setNotes(updatedNotes);\r\n          }}\r\n          onDownload={(noteText) => {\r\n            // Trigger the download of the note text\r\n            const blob = new Blob([noteText], { type: 'text/plain' });\r\n            const url = window.URL.createObjectURL(blob);\r\n            const a = document.createElement('a');\r\n            a.href = url;\r\n            a.download = 'note.txt';\r\n            a.click();\r\n            window.URL.revokeObjectURL(url);\r\n          }}\r\n        />\r\n      ))}\r\n      <button onClick={openModal} className=\"new-note-button\">\r\n        New Note\r\n      </button>\r\n      <div />\r\n      <hr />\r\n      {/* \"Generate\" button */}\r\n      <button onClick={handleGenerateClick} className=\"generate-button\">\r\n        Generate\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Room;","C:\\Users\\ashwin\\Documents\\GitHub\\HackSMU\\frontend\\src\\About.js",[],[],"C:\\Users\\ashwin\\Documents\\GitHub\\HackSMU\\frontend\\src\\Login.js",["75","76","77","78"],[],"// Login.js\r\nimport React, { useState } from 'react';\r\nimport './Login.css';\r\nimport { Navigate, useNavigate } from 'react-router-dom';\r\nimport Room from './Room';\r\nimport App from './App';\r\n\r\n//print length of rooms from './App'\r\n\r\n\r\nfunction generateRoomCode() {\r\n  // Generate a random 6-letter room code\r\n  const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\n  const code = Array.from({ length: 6 }, () => characters[Math.floor(Math.random() * characters.length)]);\r\n  return code.join('');\r\n}\r\n\r\n\r\nfunction Login({updateRooms, rooms}) {\r\n  const [isJoining, setIsJoining] = useState(true);\r\n  const [roomCode, setRoomCode] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n\r\n  function HandleCreateRoom() {\r\n    const newRoomCode = generateRoomCode();\r\n    updateRooms(rooms => ([...rooms, newRoomCode]));\r\n    //console.log(rooms);\r\n    console.log('Creating room with code:', newRoomCode);\r\n    navigate(('/'+newRoomCode));\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (isJoining) {\r\n      console.log(rooms);\r\n      // Handle joining a room with roomCode\r\n      console.log('Joining room with code:', roomCode);\r\n      if(rooms.includes(roomCode)){\r\n        console.log('Room exists');\r\n        navigate('/'+roomCode);\r\n      }\r\n      else{\r\n        console.log(\"Room does not exist\");\r\n      }\r\n\r\n    } else {\r\n      // Handle creating a room with roomCode\r\n      const newRoomCode = generateRoomCode();\r\n      console.log('Creating room with code:', newRoomCode);\r\n      navigate('/'+roomCode);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <h2>Join A Room!</h2>\r\n      <form onSubmit={handleSubmit} className=\"login-form\">\r\n        <div className=\"form-group\">\r\n          <label className=\"form-label\">Room Code:</label>\r\n          <input\r\n            type=\"text\"\r\n            value={roomCode}\r\n            onChange={(e) => setRoomCode(e.target.value)}\r\n            className=\"form-input\"\r\n          />\r\n        </div>\r\n        <button type=\"submit\" className=\"form-button\">\r\n          Join Room\r\n        </button>\r\n        <div className=\"separator\">or</div>\r\n        <button onClick={HandleCreateRoom} className=\"form-button\">\r\n          Create A Room\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","C:\\Users\\ashwin\\Documents\\GitHub\\HackSMU\\frontend\\src\\Modal.js",[],[],"C:\\Users\\ashwin\\Documents\\GitHub\\HackSMU\\frontend\\src\\AboutModule.js",["79","80"],[],"// AboutModule.js\r\nimport React from 'react';\r\nimport './AboutModule.css';\r\n\r\nfunction AboutModule({ name, biography, imageUrl, social }) {\r\n  return (\r\n    <div className=\"about-module\">\r\n      <div className=\"module-image\">\r\n        <img src={imageUrl} alt={`${name}'s image`} />\r\n      </div>\r\n      <div className=\"module-details\">\r\n        <h2>{name}</h2>\r\n        <p>{biography}</p>\r\n        <a>{social}</a>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AboutModule;","C:\\Users\\ashwin\\Documents\\GitHub\\HackSMU\\frontend\\src\\components\\NoteModal.js",["81","82","83"],[],"C:\\Users\\ashwin\\Documents\\GitHub\\HackSMU\\frontend\\src\\components\\NoteBanner.js",[],[],{"ruleId":"84","severity":1,"message":"85","line":6,"column":8,"nodeType":"86","messageId":"87","endLine":6,"endColumn":12},{"ruleId":"84","severity":1,"message":"88","line":14,"column":11,"nodeType":"86","messageId":"87","endLine":14,"endColumn":24},{"ruleId":"84","severity":1,"message":"89","line":5,"column":20,"nodeType":"86","messageId":"87","endLine":5,"endColumn":32},{"ruleId":"84","severity":1,"message":"90","line":4,"column":10,"nodeType":"86","messageId":"87","endLine":4,"endColumn":18},{"ruleId":"84","severity":1,"message":"91","line":5,"column":8,"nodeType":"86","messageId":"87","endLine":5,"endColumn":12},{"ruleId":"84","severity":1,"message":"92","line":6,"column":8,"nodeType":"86","messageId":"87","endLine":6,"endColumn":11},{"ruleId":"84","severity":1,"message":"93","line":20,"column":21,"nodeType":"86","messageId":"87","endLine":20,"endColumn":33},{"ruleId":"94","severity":1,"message":"95","line":9,"column":9,"nodeType":"96","endLine":9,"endColumn":55},{"ruleId":"97","severity":1,"message":"98","line":14,"column":9,"nodeType":"96","endLine":14,"endColumn":12},{"ruleId":"84","severity":1,"message":"89","line":3,"column":20,"nodeType":"86","messageId":"87","endLine":3,"endColumn":32},{"ruleId":"84","severity":1,"message":"99","line":11,"column":10,"nodeType":"86","messageId":"87","endLine":11,"endColumn":18},{"ruleId":"84","severity":1,"message":"100","line":11,"column":20,"nodeType":"86","messageId":"87","endLine":11,"endColumn":31},"no-unused-vars","'Home' is defined but never used.","Identifier","unusedVar","'authenticated' is assigned a value but never used.","'getNotesData' is defined but never used.","'Navigate' is defined but never used.","'Room' is defined but never used.","'App' is defined but never used.","'setIsJoining' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","'combined' is assigned a value but never used.","'setCombined' is assigned a value but never used."]