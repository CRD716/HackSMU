{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ashwin\\\\Documents\\\\GitHub\\\\HackSMU\\\\frontend\\\\src\\\\Modal.js\",\n  _s = $RefreshSig$();\nimport { React, useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport './Modal.css';\nimport { postData } from '../ApiAccess';\nimport { getNotesData } from '../ApiAccess';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MODAL_STYLES = {\n  position: 'fixed',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  backgroundColor: '#FFF',\n  padding: '50px',\n  zIndex: 1000\n};\nconst OVERLAY_STYLES = {\n  position: 'fixed',\n  top: 0,\n  left: 0,\n  right: 0,\n  bottom: 0,\n  backgroundColor: 'rgba(0, 0, 0, 0.7)',\n  zIndex: 1000\n};\nexport default function Modal({\n  open,\n  onClose\n}) {\n  _s();\n  function handleMouseOver(event) {\n    event.target.style.backgroundColor = '#aaa';\n  }\n  function handleMouseOut(event) {\n    event.target.style.backgroundColor = '#fff';\n  }\n  const [name, setName] = useState('');\n  const [text, setText] = useState('');\n  const [wordCount, setWordCount] = useState(0);\n  const [uploadedFileName, setUploadedFileName] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const handleNameChange = e => {\n    const inputName = e.target.value;\n    setName(inputName);\n  };\n  const handleTextChange = e => {\n    const inputText = e.target.value;\n    setText(inputText);\n    const words = inputText.split(/\\s+/).filter(word => word !== '');\n    setWordCount(words.length);\n  };\n  const handleFileUpload = e => {\n    const files = e.target.files;\n    if (files && files.length > 0) {\n      const file = files[0];\n      if (file.type === 'text/plain') {\n        const reader = new FileReader();\n        reader.onload = event => {\n          const fileText = event.target.result;\n          setText(fileText);\n          const words = fileText.split(/\\s+/).filter(word => word !== '');\n          setWordCount(words.length);\n          setErrorMessage('');\n          setUploadedFileName(file.name); // Set the uploaded file name\n        };\n\n        reader.readAsText(file);\n      } else {\n        setErrorMessage('Please upload a .txt file.');\n      }\n    }\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (wordCount <= 750) {\n      // Word count is within the limit, create the object and log it\n      const dataObject = {\n        name: name,\n        text: text,\n        wordCount: wordCount\n      };\n      console.log('Submitted Data:', dataObject);\n      const roomCode = window.location.href.split('3000/')[1];\n      console.log(window.location.href);\n      postData(roomCode, text);\n    } else {\n      // Word count exceeds the limit, show an error message\n      alert('Word count exceeds the limit (750 words).');\n    }\n  };\n  const handleDownload = () => {\n    // Create a Blob from the text content\n    const blob = new Blob([text], {\n      type: 'text/plain'\n    });\n    // Create a URL for the Blob\n    const url = window.URL.createObjectURL(blob);\n    // Create a temporary link element\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = uploadedFileName || 'uploaded_text.txt'; // Set the filename\n    // Simulate a click on the link to trigger the download\n    a.click();\n    // Clean up by revoking the URL object\n    window.URL.revokeObjectURL(url);\n  };\n  useEffect(() => {\n    const roomCode = window.location.href.split('3000/')[1]; // Extract the room code from the URL\n    getNotesData(roomCode) // Fetch notes for the room\n    .then(notes => {\n      // Process the retrieved notes and populate your UI\n      // For example, you can append notes to a div element on your page\n      const notesContainer = document.getElementById('notes-container');\n      notes.forEach(note => {\n        const noteElement = document.createElement('div');\n        noteElement.textContent = note.text;\n        notesContainer.appendChild(noteElement);\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  }, []); // The empty dependency array ensures this code runs once when the component mounts\n\n  return /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: OVERLAY_STYLES\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modalflex\",\n      style: MODAL_STYLES,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"close\",\n        onClick: onClose,\n        onMouseOver: handleMouseOver,\n        onMouseOut: handleMouseOut,\n        children: \"x\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"NewPost\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"New Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mcontainer\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"name-input\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                placeholder: \"Your Name\",\n                value: name,\n                onChange: handleNameChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"file-upload\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"file-input\",\n                className: \"upload-button\",\n                children: \"Upload File\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                accept: \".txt\",\n                id: \"file-input\",\n                onChange: handleFileUpload,\n                className: \"file-input\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 17\n              }, this), uploadedFileName && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"uploaded-file-name\",\n                children: uploadedFileName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              rows: \"4\",\n              cols: \"50\",\n              placeholder: \"Enter text...\",\n              onChange: handleTextChange,\n              value: text,\n              className: \"text-input\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"word-count-and-button\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"word-count\",\n                children: [wordCount, \"/750 words\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"submit-button\",\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 15\n            }, this), text && /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"download-button\",\n              type: \"button\",\n              onClick: handleDownload,\n              children: \"Download File\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: errorMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true), document.getElementById('portal'));\n}\n_s(Modal, \"lPnGbC4AF59ca9iG4fQgtaaEe/4=\");\n_c = Modal;\nvar _c;\n$RefreshReg$(_c, \"Modal\");","map":{"version":3,"names":["React","useState","useEffect","ReactDOM","postData","getNotesData","jsxDEV","_jsxDEV","Fragment","_Fragment","MODAL_STYLES","position","top","left","transform","backgroundColor","padding","zIndex","OVERLAY_STYLES","right","bottom","Modal","open","onClose","_s","handleMouseOver","event","target","style","handleMouseOut","name","setName","text","setText","wordCount","setWordCount","uploadedFileName","setUploadedFileName","errorMessage","setErrorMessage","handleNameChange","e","inputName","value","handleTextChange","inputText","words","split","filter","word","length","handleFileUpload","files","file","type","reader","FileReader","onload","fileText","result","readAsText","handleSubmit","preventDefault","dataObject","console","log","roomCode","window","location","href","alert","handleDownload","blob","Blob","url","URL","createObjectURL","a","document","createElement","download","click","revokeObjectURL","then","notes","notesContainer","getElementById","forEach","note","noteElement","textContent","appendChild","catch","error","createPortal","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","onMouseOver","onMouseOut","onSubmit","placeholder","onChange","htmlFor","accept","id","rows","cols","_c","$RefreshReg$"],"sources":["C:/Users/ashwin/Documents/GitHub/HackSMU/frontend/src/Modal.js"],"sourcesContent":["import {React, useState, useEffect} from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './Modal.css'\r\nimport { postData } from '../ApiAccess';\r\nimport { getNotesData } from '../ApiAccess';\r\n\r\nconst MODAL_STYLES = {\r\n    position: 'fixed',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    backgroundColor: '#FFF',\r\n    padding: '50px',\r\n    zIndex: 1000\r\n}\r\n\r\nconst OVERLAY_STYLES = {\r\n    position: 'fixed',\r\n    top: 0,\r\n    left: 0,\r\n    right: 0,\r\n    bottom: 0,\r\n    backgroundColor: 'rgba(0, 0, 0, 0.7)',\r\n    zIndex: 1000\r\n}\r\n\r\nexport default function Modal({ open, onClose }) {\r\n  function handleMouseOver(event) {\r\n    event.target.style.backgroundColor = '#aaa';\r\n  }\r\n\r\n  function handleMouseOut(event) {\r\n    event.target.style.backgroundColor = '#fff';\r\n  }\r\n\r\n  const [name, setName] = useState('');\r\n  const [text, setText] = useState('');\r\n  const [wordCount, setWordCount] = useState(0);\r\n  const [uploadedFileName, setUploadedFileName] = useState('');\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n\r\n  const handleNameChange = (e) => {\r\n    const inputName = e.target.value;\r\n    setName(inputName);\r\n  };\r\n\r\n  const handleTextChange = (e) => {\r\n    const inputText = e.target.value;\r\n    setText(inputText);\r\n    const words = inputText.split(/\\s+/).filter((word) => word !== '');\r\n    setWordCount(words.length);\r\n  };\r\n\r\n  const handleFileUpload = (e) => {\r\n    const files = e.target.files;\r\n    if (files && files.length > 0) {\r\n      const file = files[0];\r\n      if (file.type === 'text/plain') {\r\n        const reader = new FileReader();\r\n        reader.onload = (event) => {\r\n          const fileText = event.target.result;\r\n          setText(fileText);\r\n          const words = fileText.split(/\\s+/).filter((word) => word !== '');\r\n          setWordCount(words.length);\r\n          setErrorMessage('');\r\n          setUploadedFileName(file.name); // Set the uploaded file name\r\n        };\r\n        reader.readAsText(file);\r\n      } else {\r\n        setErrorMessage('Please upload a .txt file.');\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (wordCount <= 750) {\r\n      // Word count is within the limit, create the object and log it\r\n      const dataObject = {\r\n        name: name,\r\n        text: text,\r\n        wordCount: wordCount,\r\n      };\r\n      console.log('Submitted Data:', dataObject);\r\n      const roomCode = window.location.href.split('3000/')[1];\r\n      console.log(window.location.href);\r\n      postData(roomCode, text);\r\n    } else {\r\n      // Word count exceeds the limit, show an error message\r\n      alert('Word count exceeds the limit (750 words).');\r\n    }\r\n  };\r\n\r\n  const handleDownload = () => {\r\n    // Create a Blob from the text content\r\n    const blob = new Blob([text], { type: 'text/plain' });\r\n    // Create a URL for the Blob\r\n    const url = window.URL.createObjectURL(blob);\r\n    // Create a temporary link element\r\n    const a = document.createElement('a');\r\n    a.href = url;\r\n    a.download = uploadedFileName || 'uploaded_text.txt'; // Set the filename\r\n    // Simulate a click on the link to trigger the download\r\n    a.click();\r\n    // Clean up by revoking the URL object\r\n    window.URL.revokeObjectURL(url);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const roomCode = window.location.href.split('3000/')[1]; // Extract the room code from the URL\r\n    getNotesData(roomCode) // Fetch notes for the room\r\n      .then(notes => {\r\n        // Process the retrieved notes and populate your UI\r\n        // For example, you can append notes to a div element on your page\r\n        const notesContainer = document.getElementById('notes-container');\r\n\r\n        notes.forEach(note => {\r\n          const noteElement = document.createElement('div');\r\n          noteElement.textContent = note.text;\r\n          notesContainer.appendChild(noteElement);\r\n        });\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  }, []); // The empty dependency array ensures this code runs once when the component mounts\r\n\r\n  return ReactDOM.createPortal(\r\n    <>\r\n      <div style={OVERLAY_STYLES} />\r\n      <div className='modalflex' style={MODAL_STYLES}>\r\n        <button className='close' onClick={onClose} onMouseOver={handleMouseOver} onMouseOut={handleMouseOut}>x</button>\r\n        <div className=\"NewPost\">\r\n          <h1>New Post</h1>\r\n          <div className=\"mcontainer\">\r\n            <form onSubmit={handleSubmit}>\r\n              <div className=\"name-input\">\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Your Name\"\r\n                  value={name}\r\n                  onChange={handleNameChange}\r\n                />\r\n              </div>\r\n              <div className=\"file-upload\">\r\n                <label htmlFor=\"file-input\" className=\"upload-button\">\r\n                  Upload File\r\n                </label>\r\n                <input\r\n                  type=\"file\"\r\n                  accept=\".txt\"\r\n                  id=\"file-input\"\r\n                  onChange={handleFileUpload}\r\n                  className=\"file-input\"\r\n                />\r\n                {uploadedFileName && (\r\n                  <span className=\"uploaded-file-name\">{uploadedFileName}</span>\r\n                )}\r\n              </div>\r\n              <textarea\r\n                rows=\"4\"\r\n                cols=\"50\"\r\n                placeholder=\"Enter text...\"\r\n                onChange={handleTextChange}\r\n                value={text}\r\n                className=\"text-input\"\r\n              />\r\n              <div className=\"word-count-and-button\">\r\n                <span className=\"word-count\">{wordCount}/750 words</span>\r\n                <button type=\"submit\" className=\"submit-button\">\r\n                  Submit\r\n                </button>\r\n              </div>\r\n              {text && (\r\n                <button\r\n                  className=\"download-button\"\r\n                  type=\"button\"\r\n                  onClick={handleDownload}\r\n                >\r\n                  Download File\r\n                </button>\r\n              )}\r\n            </form>\r\n          </div>\r\n          <div className=\"error-message\">{errorMessage}</div>\r\n        </div>\r\n      </div>\r\n    </>,\r\n    document.getElementById('portal')\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}