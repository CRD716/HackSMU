{"ast":null,"code":"import _toConsumableArray from\"C:/Users/ashwin/Documents/GitHub/HackSMU/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"C:/Users/ashwin/Documents/GitHub/HackSMU/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from'react';import'./Room.css';import NoteModal from'./components/NoteModal';import NoteBanner from'./components/NoteBanner';import postData from'./ApiAccess';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Room(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isModalOpen=_useState2[0],setIsModalOpen=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),notes=_useState4[0],setNotes=_useState4[1];// Array to store note objects\nvar _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),name=_useState6[0],setName=_useState6[1];var _useState7=useState(''),_useState8=_slicedToArray(_useState7,2),text=_useState8[0],setText=_useState8[1];var _useState9=useState(0),_useState10=_slicedToArray(_useState9,2),wordCount=_useState10[0],setWordCount=_useState10[1];var _useState11=useState(''),_useState12=_slicedToArray(_useState11,2),errorMessage=_useState12[0],setErrorMessage=_useState12[1];var handleTextClick=function handleTextClick(){var textToCopy=window.location.href.split('3000/')[1];// Replace with the actual text you want to copy\nvar textArea=document.createElement('textarea');textArea.value=textToCopy;document.body.appendChild(textArea);textArea.select();document.execCommand('copy');document.body.removeChild(textArea);};var handleNameChange=function handleNameChange(e){var inputName=e.target.value;setName(inputName);};var handleTextChange=function handleTextChange(e){var inputText=e.target.value;setText(inputText);var words=inputText.split(/\\s+/).filter(function(word){return word!=='';});setWordCount(words.length);};var handleFileUpload=function handleFileUpload(e){var files=e.target.files;if(files&&files.length>0){var file=files[0];if(file.type==='text/plain'){var reader=new FileReader();reader.onload=function(event){var fileText=event.target.result;setText(fileText);var words=fileText.split(/\\s+/).filter(function(word){return word!=='';});setWordCount(words.length);setErrorMessage('');};reader.readAsText(file);}else{setErrorMessage('Please upload a .txt file.');}}};var handleGenerateClick=function handleGenerateClick(){// Implement the logic to generate something here\n// You can use this function to generate content or perform any other action you need.\nconsole.log('Generate button clicked');};var handleSubmit=function handleSubmit(e){e.preventDefault();if(!name||!text){// Check if either name or text is empty\nsetErrorMessage('Please fill in both name and text fields.');}else if(wordCount>750){// Check if word count exceeds the limit\nsetErrorMessage('Word count exceeds the limit (750 words).');}else{// Create a new note object\nvar newNote={name:name,text:text,wordCount:wordCount};// Add the new note to the notes array\nconsole.log('Added new note object: '+newNote);setNotes([].concat(_toConsumableArray(notes),[newNote]));postData(window.location.href.split('3000/')[1],text);// Clear the input fields and word count\nsetName('');setText('');setWordCount(0);setErrorMessage('');// Close the modal\nsetIsModalOpen(false);}};var openModal=function openModal(){setIsModalOpen(true);};var closeModal=function closeModal(){setIsModalOpen(false);};var addNote=function addNote(newNote){setNotes([].concat(_toConsumableArray(notes),[newNote]));};return/*#__PURE__*/_jsxs(\"div\",{className:\"Room\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"FuzeNote\"}),/*#__PURE__*/_jsx(\"h2\",{children:\"Room Code\"}),/*#__PURE__*/_jsx(\"p\",{children:/*#__PURE__*/_jsxs(\"span\",{className:\"copy-text\",onClick:handleTextClick,children:[window.location.href.split('3000/')[1],' ',/*#__PURE__*/_jsx(\"span\",{className:\"tooltip\",children:\"Click to Copy\"})]})}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Total Posts: \",notes.length]}),/*#__PURE__*/_jsx(\"p\",{children:/*#__PURE__*/_jsxs(\"span\",{className:\"total-words\",children:[notes.reduce(function(total,note){return total+note.wordCount;},0),\"/3000 total words permitted\"]})}),/*#__PURE__*/_jsx(\"hr\",{}),isModalOpen&&/*#__PURE__*/_jsx(NoteModal,{isOpen:isModalOpen,closeModal:closeModal,handleSubmit:handleSubmit,handleNameChange:handleNameChange,handleTextChange:handleTextChange,handleFileUpload:handleFileUpload,errorMessage:errorMessage,name:name,text:text,wordCount:wordCount,addNote:addNote// Pass the addNote function as a prop\n}),notes.map(function(note,index){return/*#__PURE__*/_jsx(NoteBanner,{note:note,onDelete:function onDelete(noteToDelete){// Remove the note from the notes array\nvar updatedNotes=notes.filter(function(note){return note!==noteToDelete;});setNotes(updatedNotes);},onDownload:function onDownload(noteText){// Trigger the download of the note text\nvar blob=new Blob([noteText],{type:'text/plain'});var url=window.URL.createObjectURL(blob);var a=document.createElement('a');a.href=url;a.download='note.txt';a.click();window.URL.revokeObjectURL(url);}},index);}),/*#__PURE__*/_jsx(\"button\",{onClick:openModal,className:\"new-note-button\",children:\"New Note\"}),/*#__PURE__*/_jsx(\"div\",{}),/*#__PURE__*/_jsx(\"hr\",{}),/*#__PURE__*/_jsx(\"button\",{onClick:handleGenerateClick,className:\"generate-button\",children:\"Generate\"})]});}export default Room;","map":{"version":3,"names":["React","useState","NoteModal","NoteBanner","postData","jsx","_jsx","jsxs","_jsxs","Room","_useState","_useState2","_slicedToArray","isModalOpen","setIsModalOpen","_useState3","_useState4","notes","setNotes","_useState5","_useState6","name","setName","_useState7","_useState8","text","setText","_useState9","_useState10","wordCount","setWordCount","_useState11","_useState12","errorMessage","setErrorMessage","handleTextClick","textToCopy","window","location","href","split","textArea","document","createElement","value","body","appendChild","select","execCommand","removeChild","handleNameChange","e","inputName","target","handleTextChange","inputText","words","filter","word","length","handleFileUpload","files","file","type","reader","FileReader","onload","event","fileText","result","readAsText","handleGenerateClick","console","log","handleSubmit","preventDefault","newNote","concat","_toConsumableArray","openModal","closeModal","addNote","className","children","onClick","reduce","total","note","isOpen","map","index","onDelete","noteToDelete","updatedNotes","onDownload","noteText","blob","Blob","url","URL","createObjectURL","a","download","click","revokeObjectURL"],"sources":["C:/Users/ashwin/Documents/GitHub/HackSMU/frontend/src/Room.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './Room.css';\r\nimport NoteModal from './components/NoteModal';\r\nimport NoteBanner from './components/NoteBanner';\r\nimport postData from './ApiAccess';\r\n\r\nfunction Room() {\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [notes, setNotes] = useState([]); // Array to store note objects\r\n  const [name, setName] = useState('');\r\n  const [text, setText] = useState('');\r\n  const [wordCount, setWordCount] = useState(0);\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n\r\n  const handleTextClick = () => {\r\n    const textToCopy = window.location.href.split('3000/')[1]; // Replace with the actual text you want to copy\r\n    const textArea = document.createElement('textarea');\r\n    textArea.value = textToCopy;\r\n    document.body.appendChild(textArea);\r\n    textArea.select();\r\n    document.execCommand('copy');\r\n    document.body.removeChild(textArea);\r\n  };\r\n\r\n  const handleNameChange = (e) => {\r\n    const inputName = e.target.value;\r\n    setName(inputName);\r\n  };\r\n\r\n  const handleTextChange = (e) => {\r\n    const inputText = e.target.value;\r\n    setText(inputText);\r\n    const words = inputText.split(/\\s+/).filter((word) => word !== '');\r\n    setWordCount(words.length);\r\n  };\r\n\r\n  const handleFileUpload = (e) => {\r\n    const files = e.target.files;\r\n    if (files && files.length > 0) {\r\n      const file = files[0];\r\n      if (file.type === 'text/plain') {\r\n        const reader = new FileReader();\r\n        reader.onload = (event) => {\r\n          const fileText = event.target.result;\r\n          setText(fileText);\r\n          const words = fileText.split(/\\s+/).filter((word) => word !== '');\r\n          setWordCount(words.length);\r\n          setErrorMessage('');\r\n        };\r\n        reader.readAsText(file);\r\n      } else {\r\n        setErrorMessage('Please upload a .txt file.');\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleGenerateClick = () => {\r\n    // Implement the logic to generate something here\r\n    // You can use this function to generate content or perform any other action you need.\r\n    console.log('Generate button clicked');\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!name || !text) {\r\n      // Check if either name or text is empty\r\n      setErrorMessage('Please fill in both name and text fields.');\r\n    } else if (wordCount > 750) {\r\n      // Check if word count exceeds the limit\r\n      setErrorMessage('Word count exceeds the limit (750 words).');\r\n    } else {\r\n      // Create a new note object\r\n      const newNote = {\r\n        name: name,\r\n        text: text,\r\n        wordCount: wordCount,\r\n      };\r\n\r\n      // Add the new note to the notes array\r\n      console.log('Added new note object: ' + newNote);\r\n      setNotes([...notes, newNote]);\r\n      postData(window.location.href.split('3000/')[1], text);\r\n\r\n      // Clear the input fields and word count\r\n      setName('');\r\n      setText('');\r\n      setWordCount(0);\r\n      setErrorMessage('');\r\n\r\n      // Close the modal\r\n      setIsModalOpen(false);\r\n    }\r\n  };\r\n\r\n  const openModal = () => {\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  const addNote = (newNote) => {\r\n    setNotes([...notes, newNote]);\r\n  };  \r\n  \r\n  return (\r\n    <div className=\"Room\">\r\n      <h1>FuzeNote</h1>\r\n      <h2>Room Code</h2>\r\n      <p>\r\n        <span className=\"copy-text\" onClick={handleTextClick}>\r\n          {window.location.href.split('3000/')[1]}{' '}\r\n          <span className=\"tooltip\">Click to Copy</span>\r\n        </span>\r\n      </p>\r\n      <p>Total Posts: {notes.length}</p>\r\n      <p>\r\n        <span className=\"total-words\">\r\n          {notes.reduce((total, note) => total + note.wordCount, 0)}/3000 total words permitted\r\n        </span>\r\n      </p>\r\n      <hr />\r\n      {isModalOpen && (\r\n        <NoteModal\r\n          isOpen={isModalOpen}\r\n          closeModal={closeModal}\r\n          handleSubmit={handleSubmit}\r\n          handleNameChange={handleNameChange}\r\n          handleTextChange={handleTextChange}\r\n          handleFileUpload={handleFileUpload}\r\n          errorMessage={errorMessage}\r\n          name={name}\r\n          text={text}\r\n          wordCount={wordCount}\r\n          addNote={addNote} // Pass the addNote function as a prop\r\n        />\r\n      )}\r\n      {notes.map((note, index) => (\r\n        <NoteBanner\r\n          key={index}\r\n          note={note}\r\n          onDelete={(noteToDelete) => {\r\n            // Remove the note from the notes array\r\n            const updatedNotes = notes.filter((note) => note !== noteToDelete);\r\n            setNotes(updatedNotes);\r\n          }}\r\n          onDownload={(noteText) => {\r\n            // Trigger the download of the note text\r\n            const blob = new Blob([noteText], { type: 'text/plain' });\r\n            const url = window.URL.createObjectURL(blob);\r\n            const a = document.createElement('a');\r\n            a.href = url;\r\n            a.download = 'note.txt';\r\n            a.click();\r\n            window.URL.revokeObjectURL(url);\r\n          }}\r\n        />\r\n      ))}\r\n      <button onClick={openModal} className=\"new-note-button\">\r\n        New Note\r\n      </button>\r\n      <div />\r\n      <hr />\r\n      {/* \"Generate\" button */}\r\n      <button onClick={handleGenerateClick} className=\"generate-button\">\r\n        Generate\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Room;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}